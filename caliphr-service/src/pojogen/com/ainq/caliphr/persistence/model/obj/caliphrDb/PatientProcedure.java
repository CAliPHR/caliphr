package com.ainq.caliphr.persistence.model.obj.caliphrDb;

import com.ainq.caliphr.persistence.model.obj.caliphrDb.PatientProcedure;
import com.ainq.caliphr.persistence.model.obj.caliphrDb.iface.IPatientProcedure;
import com.ainq.caliphr.persistence.util.IPojoGenEntity;
import java.io.Serializable;
import java.util.Collections;
import java.util.Date;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.WeakHashMap;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;
import org.hibernate.annotations.*;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.Parameter;
import org.hibernate.proxy.HibernateProxy;

/**
 * Object mapping for hibernate-handled table: patient_procedure.
 * 
 *
 * @author autogenerated
 */
		

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;


import javax.persistence.*;

@Entity
@Table(name = "patient_procedure", catalog = "caliphr_db", schema = "caliphr")
@Cache(region = "com.ainq.caliphr.persistence.model.obj.caliphrDb.PatientProcedure", usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
public class PatientProcedure implements Cloneable, Serializable, IPojoGenEntity, IPatientProcedure {

	/** Serial Version UID. */
	private static final long serialVersionUID = -8068210626556281482L;

	/** Use a WeakHashMap so entries will be garbage collected once all entities 
		referring to a saved hash are garbage collected themselves. */
	private static final Map<Serializable, Long> SAVED_HASHES =
		Collections.synchronizedMap(new WeakHashMap<>());
	
	/** hashCode temporary storage. */
	private volatile Long hashCode;
	

	/** Field mapping. */
	private Code code;
	/** Field mapping. */
	private String codeDescription;
	/** Field mapping. */
	private CodeMapping codeMapping;
	/** Field mapping. */
	private PatientProcedure connectedRecord;
	/** Field mapping. */
	private Date dateCreated;
	/** Field mapping. */
	private Date dateDisabled;
	/** Field mapping. */
	private Date dateUpdated;
	/** Field mapping. */
	private Date effectiveTimeEnd;
	/** Field mapping. */
	private Date effectiveTimeStart;
	/** Field mapping. */
	private String externalId;
	/** Field mapping. */
	private Long id;
	/** Field mapping. */
	private PatientNegationDetail negationDetail;
	/** Field mapping. */
	private Code ordinalityCode;
	/** Field mapping. */
	private Integer ordinalityCodeDescription;
	/** Field mapping. */
	private String ordinalityCodeName;
	/** Field mapping. */
	private String ordinalityCodeSystem;
	/** Field mapping. */
	private PatientInfo patient;
	/** Field mapping. */
	private Set<PatientProcedure> patientProcedures = new HashSet<>();

	/** Field mapping. */
	private Code reasonCode;
	/** Field mapping. */
	private String reasonCodeDescription;
	/** Field mapping. */
	private String reasonCodeName;
	/** Field mapping. */
	private String reasonCodeSystem;
	/** Field mapping. */
	private Date reasonEffectiveTime;
	/** Field mapping. */
	private Code resultValueCode;
	/** Field mapping. */
	private String resultValueCodeDescription;
	/** Field mapping. */
	private String resultValueCodeName;
	/** Field mapping. */
	private String resultValueCodeSystem;
	/** Field mapping. */
	private StatusCode statusCode;
	/** Field mapping. */
	private String statusCodeName;
	/** Field mapping. */
	private TemplateRoot template;
	/** Field mapping. */
	private Integer userCreated;
	/** Field mapping. */
	private Integer userUpdated;
	/** Field mapping. */
	private Code valueCode;
	/** Field mapping. */
	private String valueCodeDescription;
	/** Field mapping. */
	private String valueString;
	/** Field mapping. */
	private String valueUnit;
	/**
	 * Default constructor, mainly for hibernate use.
	 */
	public PatientProcedure() {
		// Default constructor
	} 

	/** Constructor taking a given ID.
	 * @param id to set
	 */
	public PatientProcedure(Long id) {
		this.id = id;
	}
	
 


 
	/** Return the type of this class. Useful for when dealing with proxies.
	* @return Defining class.
	*/
	@Transient
	public Class<?> getClassType() {
		return PatientProcedure.class;
	}


	 /**
	 * Return the value associated with the column: code.
	 * @return A Code object (this.code)
	 */

	@JsonBackReference @ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = true )
	@JoinColumn(name = "code_id", nullable = true )
	public Code getCode() {
		return this.code;
		
	}
	

  
	 /**  
	 * Set the value related to the column: code.
	 * @param code the code value you wish to set
	 */
	public void setCode(final Code code) {
		this.code = code;
	}

	 /**
	 * Return the value associated with the column: codeDescription.
	 * @return A String object (this.codeDescription)
	 */
	@Basic( optional = true )
	@Column( name = "code_description", length = 2147483647  )
	public String getCodeDescription() {
		return this.codeDescription;
		
	}
	

  
	 /**  
	 * Set the value related to the column: codeDescription.
	 * @param codeDescription the codeDescription value you wish to set
	 */
	public void setCodeDescription(final String codeDescription) {
		this.codeDescription = codeDescription;
	}

	 /**
	 * Return the value associated with the column: codeMapping.
	 * @return A CodeMapping object (this.codeMapping)
	 */

	@JsonBackReference @ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = true )
	@JoinColumn(name = "code_mapping_id", nullable = true )
	public CodeMapping getCodeMapping() {
		return this.codeMapping;
		
	}
	

  
	 /**  
	 * Set the value related to the column: codeMapping.
	 * @param codeMapping the codeMapping value you wish to set
	 */
	public void setCodeMapping(final CodeMapping codeMapping) {
		this.codeMapping = codeMapping;
	}

	 /**
	 * Return the value associated with the column: connectedRecord.
	 * @return A PatientProcedure object (this.connectedRecord)
	 */

	@JsonBackReference @ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = true )
	@JoinColumn(name = "connected_record_id", nullable = true )
	public PatientProcedure getConnectedRecord() {
		return this.connectedRecord;
		
	}
	

  
	 /**  
	 * Set the value related to the column: connectedRecord.
	 * @param connectedRecord the connectedRecord value you wish to set
	 */
	public void setConnectedRecord(final PatientProcedure connectedRecord) {
		this.connectedRecord = connectedRecord;
	}

	 /**
	 * Return the value associated with the column: dateCreated.
	 * @return A Date object (this.dateCreated)
	 */
	@Basic( optional = true )
	@Column( name = "date_created"  )
	public Date getDateCreated() {
		return this.dateCreated;
		
	}
	

  
	 /**  
	 * Set the value related to the column: dateCreated.
	 * @param dateCreated the dateCreated value you wish to set
	 */
	public void setDateCreated(final Date dateCreated) {
		this.dateCreated = dateCreated;
	}

	 /**
	 * Return the value associated with the column: dateDisabled.
	 * @return A Date object (this.dateDisabled)
	 */
	@Basic( optional = true )
	@Column( name = "date_disabled"  )
	public Date getDateDisabled() {
		return this.dateDisabled;
		
	}
	

  
	 /**  
	 * Set the value related to the column: dateDisabled.
	 * @param dateDisabled the dateDisabled value you wish to set
	 */
	public void setDateDisabled(final Date dateDisabled) {
		this.dateDisabled = dateDisabled;
	}

	 /**
	 * Return the value associated with the column: dateUpdated.
	 * @return A Date object (this.dateUpdated)
	 */
	@Basic( optional = true )
	@Column( name = "date_updated"  )
	public Date getDateUpdated() {
		return this.dateUpdated;
		
	}
	

  
	 /**  
	 * Set the value related to the column: dateUpdated.
	 * @param dateUpdated the dateUpdated value you wish to set
	 */
	public void setDateUpdated(final Date dateUpdated) {
		this.dateUpdated = dateUpdated;
	}

	 /**
	 * Return the value associated with the column: effectiveTimeEnd.
	 * @return A Date object (this.effectiveTimeEnd)
	 */
	@Basic( optional = true )
	@Column( name = "effective_time_end"  )
	public Date getEffectiveTimeEnd() {
		return this.effectiveTimeEnd;
		
	}
	

  
	 /**  
	 * Set the value related to the column: effectiveTimeEnd.
	 * @param effectiveTimeEnd the effectiveTimeEnd value you wish to set
	 */
	public void setEffectiveTimeEnd(final Date effectiveTimeEnd) {
		this.effectiveTimeEnd = effectiveTimeEnd;
	}

	 /**
	 * Return the value associated with the column: effectiveTimeStart.
	 * @return A Date object (this.effectiveTimeStart)
	 */
	@Basic( optional = true )
	@Column( name = "effective_time_start"  )
	public Date getEffectiveTimeStart() {
		return this.effectiveTimeStart;
		
	}
	

  
	 /**  
	 * Set the value related to the column: effectiveTimeStart.
	 * @param effectiveTimeStart the effectiveTimeStart value you wish to set
	 */
	public void setEffectiveTimeStart(final Date effectiveTimeStart) {
		this.effectiveTimeStart = effectiveTimeStart;
	}

	 /**
	 * Return the value associated with the column: externalId.
	 * @return A String object (this.externalId)
	 */
	@Basic( optional = true )
	@Column( name = "external_id", length = 2147483647  )
	public String getExternalId() {
		return this.externalId;
		
	}
	

  
	 /**  
	 * Set the value related to the column: externalId.
	 * @param externalId the externalId value you wish to set
	 */
	public void setExternalId(final String externalId) {
		this.externalId = externalId;
	}

	 /**
	 * Return the value associated with the column: id.
	 * @return A Long object (this.id)
	 */
    @Id 
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "patientProcedureRecord_idGenerator")
	@Basic( optional = false )
	@Column( name = "record_id", nullable = false  )
	@SequenceGenerator(allocationSize = 50, name = "patientProcedureRecord_idGenerator", sequenceName = "caliphr_db.caliphr.patient_procedure_id_seq", schema = "caliphr", catalog = "caliphr_db")
	public Long getId() {
		return this.id;
		
	}
	

  
	 /**  
	 * Set the value related to the column: id.
	 * @param id the id value you wish to set
	 */
	public void setId(final Long id) {
		// If we've just been persisted and hashCode has been
		// returned then make sure other entities with this
		// ID return the already returned hash code
		if ( (this.id == null || this.id == 0L) &&
				(id != null) &&
				(this.hashCode != null) ) {
		SAVED_HASHES.put( id, this.hashCode );
		}
		this.id = id;
	}

	 /**
	 * Return the value associated with the column: negationDetail.
	 * @return A PatientNegationDetail object (this.negationDetail)
	 */

	@JsonBackReference @ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = true )
	@JoinColumn(name = "negation_detail_id", nullable = true )
	public PatientNegationDetail getNegationDetail() {
		return this.negationDetail;
		
	}
	

  
	 /**  
	 * Set the value related to the column: negationDetail.
	 * @param negationDetail the negationDetail value you wish to set
	 */
	public void setNegationDetail(final PatientNegationDetail negationDetail) {
		this.negationDetail = negationDetail;
	}

	 /**
	 * Return the value associated with the column: ordinalityCode.
	 * @return A Code object (this.ordinalityCode)
	 */

	@JsonBackReference @ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = true )
	@JoinColumn(name = "ordinality_code_id", nullable = true )
	public Code getOrdinalityCode() {
		return this.ordinalityCode;
		
	}
	

  
	 /**  
	 * Set the value related to the column: ordinalityCode.
	 * @param ordinalityCode the ordinalityCode value you wish to set
	 */
	public void setOrdinalityCode(final Code ordinalityCode) {
		this.ordinalityCode = ordinalityCode;
	}

	 /**
	 * Return the value associated with the column: ordinalityCodeDescription.
	 * @return A Integer object (this.ordinalityCodeDescription)
	 */
	@Basic( optional = true )
	@Column( name = "ordinality_code_description"  )
	public Integer getOrdinalityCodeDescription() {
		return this.ordinalityCodeDescription;
		
	}
	

  
	 /**  
	 * Set the value related to the column: ordinalityCodeDescription.
	 * @param ordinalityCodeDescription the ordinalityCodeDescription value you wish to set
	 */
	public void setOrdinalityCodeDescription(final Integer ordinalityCodeDescription) {
		this.ordinalityCodeDescription = ordinalityCodeDescription;
	}

	 /**
	 * Return the value associated with the column: ordinalityCodeName.
	 * @return A String object (this.ordinalityCodeName)
	 */
	@Basic( optional = true )
	@Column( name = "ordinality_code_name", length = 2147483647  )
	public String getOrdinalityCodeName() {
		return this.ordinalityCodeName;
		
	}
	

  
	 /**  
	 * Set the value related to the column: ordinalityCodeName.
	 * @param ordinalityCodeName the ordinalityCodeName value you wish to set
	 */
	public void setOrdinalityCodeName(final String ordinalityCodeName) {
		this.ordinalityCodeName = ordinalityCodeName;
	}

	 /**
	 * Return the value associated with the column: ordinalityCodeSystem.
	 * @return A String object (this.ordinalityCodeSystem)
	 */
	@Basic( optional = true )
	@Column( name = "ordinality_code_system", length = 2147483647  )
	public String getOrdinalityCodeSystem() {
		return this.ordinalityCodeSystem;
		
	}
	

  
	 /**  
	 * Set the value related to the column: ordinalityCodeSystem.
	 * @param ordinalityCodeSystem the ordinalityCodeSystem value you wish to set
	 */
	public void setOrdinalityCodeSystem(final String ordinalityCodeSystem) {
		this.ordinalityCodeSystem = ordinalityCodeSystem;
	}

	 /**
	 * Return the value associated with the column: patient.
	 * @return A PatientInfo object (this.patient)
	 */

	@JsonBackReference @ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = true )
	@JoinColumn(name = "patient_id", nullable = true )
	public PatientInfo getPatient() {
		return this.patient;
		
	}
	

  
	 /**  
	 * Set the value related to the column: patient.
	 * @param patient the patient value you wish to set
	 */
	public void setPatient(final PatientInfo patient) {
		this.patient = patient;
	}

	 /**
	 * Return the value associated with the column: patientProcedure.
	 * @return A Set&lt;PatientProcedure&gt; object (this.patientProcedure)
	 */
	@JsonManagedReference @OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "connectedRecord"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "record_id", nullable = false  )
	public Set<PatientProcedure> getPatientProcedures() {
		return this.patientProcedures;
		
	}
	
	/**
	 * Adds a bi-directional link of type PatientProcedure to the patientProcedures set.
	 * @param patientProcedure item to add
	 */
	public void addPatientProcedure(PatientProcedure patientProcedure) {
		patientProcedure.setConnectedRecord(this);
		this.patientProcedures.add(patientProcedure);
	}

  
	 /**  
	 * Set the value related to the column: patientProcedure.
	 * @param patientProcedure the patientProcedure value you wish to set
	 */
	public void setPatientProcedures(final Set<PatientProcedure> patientProcedure) {
		this.patientProcedures = patientProcedure;
	}

	 /**
	 * Return the value associated with the column: reasonCode.
	 * @return A Code object (this.reasonCode)
	 */

	@JsonBackReference @ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = true )
	@JoinColumn(name = "reason_code_id", nullable = true )
	public Code getReasonCode() {
		return this.reasonCode;
		
	}
	

  
	 /**  
	 * Set the value related to the column: reasonCode.
	 * @param reasonCode the reasonCode value you wish to set
	 */
	public void setReasonCode(final Code reasonCode) {
		this.reasonCode = reasonCode;
	}

	 /**
	 * Return the value associated with the column: reasonCodeDescription.
	 * @return A String object (this.reasonCodeDescription)
	 */
	@Basic( optional = true )
	@Column( name = "reason_code_description", length = 2147483647  )
	public String getReasonCodeDescription() {
		return this.reasonCodeDescription;
		
	}
	

  
	 /**  
	 * Set the value related to the column: reasonCodeDescription.
	 * @param reasonCodeDescription the reasonCodeDescription value you wish to set
	 */
	public void setReasonCodeDescription(final String reasonCodeDescription) {
		this.reasonCodeDescription = reasonCodeDescription;
	}

	 /**
	 * Return the value associated with the column: reasonCodeName.
	 * @return A String object (this.reasonCodeName)
	 */
	@Basic( optional = true )
	@Column( name = "reason_code_name", length = 2147483647  )
	public String getReasonCodeName() {
		return this.reasonCodeName;
		
	}
	

  
	 /**  
	 * Set the value related to the column: reasonCodeName.
	 * @param reasonCodeName the reasonCodeName value you wish to set
	 */
	public void setReasonCodeName(final String reasonCodeName) {
		this.reasonCodeName = reasonCodeName;
	}

	 /**
	 * Return the value associated with the column: reasonCodeSystem.
	 * @return A String object (this.reasonCodeSystem)
	 */
	@Basic( optional = true )
	@Column( name = "reason_code_system", length = 2147483647  )
	public String getReasonCodeSystem() {
		return this.reasonCodeSystem;
		
	}
	

  
	 /**  
	 * Set the value related to the column: reasonCodeSystem.
	 * @param reasonCodeSystem the reasonCodeSystem value you wish to set
	 */
	public void setReasonCodeSystem(final String reasonCodeSystem) {
		this.reasonCodeSystem = reasonCodeSystem;
	}

	 /**
	 * Return the value associated with the column: reasonEffectiveTime.
	 * @return A Date object (this.reasonEffectiveTime)
	 */
	@Basic( optional = true )
	@Column( name = "reason_effective_time"  )
	public Date getReasonEffectiveTime() {
		return this.reasonEffectiveTime;
		
	}
	

  
	 /**  
	 * Set the value related to the column: reasonEffectiveTime.
	 * @param reasonEffectiveTime the reasonEffectiveTime value you wish to set
	 */
	public void setReasonEffectiveTime(final Date reasonEffectiveTime) {
		this.reasonEffectiveTime = reasonEffectiveTime;
	}

	 /**
	 * Return the value associated with the column: resultValueCode.
	 * @return A Code object (this.resultValueCode)
	 */

	@JsonBackReference @ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = true )
	@JoinColumn(name = "result_value_code_id", nullable = true )
	public Code getResultValueCode() {
		return this.resultValueCode;
		
	}
	

  
	 /**  
	 * Set the value related to the column: resultValueCode.
	 * @param resultValueCode the resultValueCode value you wish to set
	 */
	public void setResultValueCode(final Code resultValueCode) {
		this.resultValueCode = resultValueCode;
	}

	 /**
	 * Return the value associated with the column: resultValueCodeDescription.
	 * @return A String object (this.resultValueCodeDescription)
	 */
	@Basic( optional = true )
	@Column( name = "result_value_code_description", length = 2147483647  )
	public String getResultValueCodeDescription() {
		return this.resultValueCodeDescription;
		
	}
	

  
	 /**  
	 * Set the value related to the column: resultValueCodeDescription.
	 * @param resultValueCodeDescription the resultValueCodeDescription value you wish to set
	 */
	public void setResultValueCodeDescription(final String resultValueCodeDescription) {
		this.resultValueCodeDescription = resultValueCodeDescription;
	}

	 /**
	 * Return the value associated with the column: resultValueCodeName.
	 * @return A String object (this.resultValueCodeName)
	 */
	@Basic( optional = true )
	@Column( name = "result_value_code_name", length = 2147483647  )
	public String getResultValueCodeName() {
		return this.resultValueCodeName;
		
	}
	

  
	 /**  
	 * Set the value related to the column: resultValueCodeName.
	 * @param resultValueCodeName the resultValueCodeName value you wish to set
	 */
	public void setResultValueCodeName(final String resultValueCodeName) {
		this.resultValueCodeName = resultValueCodeName;
	}

	 /**
	 * Return the value associated with the column: resultValueCodeSystem.
	 * @return A String object (this.resultValueCodeSystem)
	 */
	@Basic( optional = true )
	@Column( name = "result_value_code_system", length = 2147483647  )
	public String getResultValueCodeSystem() {
		return this.resultValueCodeSystem;
		
	}
	

  
	 /**  
	 * Set the value related to the column: resultValueCodeSystem.
	 * @param resultValueCodeSystem the resultValueCodeSystem value you wish to set
	 */
	public void setResultValueCodeSystem(final String resultValueCodeSystem) {
		this.resultValueCodeSystem = resultValueCodeSystem;
	}

	 /**
	 * Return the value associated with the column: statusCode.
	 * @return A StatusCode object (this.statusCode)
	 */

	@JsonBackReference @ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = true )
	@JoinColumn(name = "status_code_id", nullable = true )
	public StatusCode getStatusCode() {
		return this.statusCode;
		
	}
	

  
	 /**  
	 * Set the value related to the column: statusCode.
	 * @param statusCode the statusCode value you wish to set
	 */
	public void setStatusCode(final StatusCode statusCode) {
		this.statusCode = statusCode;
	}

	 /**
	 * Return the value associated with the column: statusCodeName.
	 * @return A String object (this.statusCodeName)
	 */
	@Basic( optional = true )
	@Column( name = "status_code_name", length = 2147483647  )
	public String getStatusCodeName() {
		return this.statusCodeName;
		
	}
	

  
	 /**  
	 * Set the value related to the column: statusCodeName.
	 * @param statusCodeName the statusCodeName value you wish to set
	 */
	public void setStatusCodeName(final String statusCodeName) {
		this.statusCodeName = statusCodeName;
	}

	 /**
	 * Return the value associated with the column: template.
	 * @return A TemplateRoot object (this.template)
	 */

	@JsonBackReference @ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = true )
	@JoinColumn(name = "template_id", nullable = true )
	public TemplateRoot getTemplate() {
		return this.template;
		
	}
	

  
	 /**  
	 * Set the value related to the column: template.
	 * @param template the template value you wish to set
	 */
	public void setTemplate(final TemplateRoot template) {
		this.template = template;
	}

	 /**
	 * Return the value associated with the column: userCreated.
	 * @return A Integer object (this.userCreated)
	 */
	@Basic( optional = true )
	@Column( name = "user_created"  )
	public Integer getUserCreated() {
		return this.userCreated;
		
	}
	

  
	 /**  
	 * Set the value related to the column: userCreated.
	 * @param userCreated the userCreated value you wish to set
	 */
	public void setUserCreated(final Integer userCreated) {
		this.userCreated = userCreated;
	}

	 /**
	 * Return the value associated with the column: userUpdated.
	 * @return A Integer object (this.userUpdated)
	 */
	@Basic( optional = true )
	@Column( name = "user_updated"  )
	public Integer getUserUpdated() {
		return this.userUpdated;
		
	}
	

  
	 /**  
	 * Set the value related to the column: userUpdated.
	 * @param userUpdated the userUpdated value you wish to set
	 */
	public void setUserUpdated(final Integer userUpdated) {
		this.userUpdated = userUpdated;
	}

	 /**
	 * Return the value associated with the column: valueCode.
	 * @return A Code object (this.valueCode)
	 */

	@JsonBackReference @ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = true )
	@JoinColumn(name = "value_code_id", nullable = true )
	public Code getValueCode() {
		return this.valueCode;
		
	}
	

  
	 /**  
	 * Set the value related to the column: valueCode.
	 * @param valueCode the valueCode value you wish to set
	 */
	public void setValueCode(final Code valueCode) {
		this.valueCode = valueCode;
	}

	 /**
	 * Return the value associated with the column: valueCodeDescription.
	 * @return A String object (this.valueCodeDescription)
	 */
	@Basic( optional = true )
	@Column( name = "value_code_description", length = 2147483647  )
	public String getValueCodeDescription() {
		return this.valueCodeDescription;
		
	}
	

  
	 /**  
	 * Set the value related to the column: valueCodeDescription.
	 * @param valueCodeDescription the valueCodeDescription value you wish to set
	 */
	public void setValueCodeDescription(final String valueCodeDescription) {
		this.valueCodeDescription = valueCodeDescription;
	}

	 /**
	 * Return the value associated with the column: valueString.
	 * @return A String object (this.valueString)
	 */
	@Basic( optional = true )
	@Column( name = "value_string", length = 2147483647  )
	public String getValueString() {
		return this.valueString;
		
	}
	

  
	 /**  
	 * Set the value related to the column: valueString.
	 * @param valueString the valueString value you wish to set
	 */
	public void setValueString(final String valueString) {
		this.valueString = valueString;
	}

	 /**
	 * Return the value associated with the column: valueUnit.
	 * @return A String object (this.valueUnit)
	 */
	@Basic( optional = true )
	@Column( name = "value_unit", length = 2147483647  )
	public String getValueUnit() {
		return this.valueUnit;
		
	}
	

  
	 /**  
	 * Set the value related to the column: valueUnit.
	 * @param valueUnit the valueUnit value you wish to set
	 */
	public void setValueUnit(final String valueUnit) {
		this.valueUnit = valueUnit;
	}


   /**
    * Deep copy.
	* @return cloned object
	* @throws CloneNotSupportedException on error
    */
    @Override
    public PatientProcedure clone() throws CloneNotSupportedException {
		
        final PatientProcedure copy = (PatientProcedure)super.clone();

 		copy.setCode(this.getCode());
 		copy.setCodeDescription(this.getCodeDescription());
 		copy.setCodeMapping(this.getCodeMapping());
 		copy.setConnectedRecord(this.getConnectedRecord());
 		copy.setDateCreated(this.getDateCreated());
 		copy.setDateDisabled(this.getDateDisabled());
 		copy.setDateUpdated(this.getDateUpdated());
 		copy.setEffectiveTimeEnd(this.getEffectiveTimeEnd());
 		copy.setEffectiveTimeStart(this.getEffectiveTimeStart());
 		copy.setExternalId(this.getExternalId());
 		copy.setId(this.getId());
 		copy.setNegationDetail(this.getNegationDetail());
 		copy.setOrdinalityCode(this.getOrdinalityCode());
 		copy.setOrdinalityCodeDescription(this.getOrdinalityCodeDescription());
 		copy.setOrdinalityCodeName(this.getOrdinalityCodeName());
 		copy.setOrdinalityCodeSystem(this.getOrdinalityCodeSystem());
 		copy.setPatient(this.getPatient());
		if (this.getPatientProcedures() != null) {
			copy.getPatientProcedures().addAll(this.getPatientProcedures());
		}
 		copy.setReasonCode(this.getReasonCode());
 		copy.setReasonCodeDescription(this.getReasonCodeDescription());
 		copy.setReasonCodeName(this.getReasonCodeName());
 		copy.setReasonCodeSystem(this.getReasonCodeSystem());
 		copy.setReasonEffectiveTime(this.getReasonEffectiveTime());
 		copy.setResultValueCode(this.getResultValueCode());
 		copy.setResultValueCodeDescription(this.getResultValueCodeDescription());
 		copy.setResultValueCodeName(this.getResultValueCodeName());
 		copy.setResultValueCodeSystem(this.getResultValueCodeSystem());
 		copy.setStatusCode(this.getStatusCode());
 		copy.setStatusCodeName(this.getStatusCodeName());
 		copy.setTemplate(this.getTemplate());
 		copy.setUserCreated(this.getUserCreated());
 		copy.setUserUpdated(this.getUserUpdated());
 		copy.setValueCode(this.getValueCode());
 		copy.setValueCodeDescription(this.getValueCodeDescription());
 		copy.setValueString(this.getValueString());
 		copy.setValueUnit(this.getValueUnit());
		return copy;
	}
	


	/** Provides toString implementation.
	 * @see java.lang.Object#toString()
	 * @return String representation of this class.
	 */
	@Override
	public String toString() {
		StringBuffer sb = new StringBuffer();
		
		sb.append("codeDescription: " + this.getCodeDescription() + ", ");
		sb.append("dateCreated: " + this.getDateCreated() + ", ");
		sb.append("dateDisabled: " + this.getDateDisabled() + ", ");
		sb.append("dateUpdated: " + this.getDateUpdated() + ", ");
		sb.append("effectiveTimeEnd: " + this.getEffectiveTimeEnd() + ", ");
		sb.append("effectiveTimeStart: " + this.getEffectiveTimeStart() + ", ");
		sb.append("externalId: " + this.getExternalId() + ", ");
		sb.append("id: " + this.getId() + ", ");
		sb.append("ordinalityCodeDescription: " + this.getOrdinalityCodeDescription() + ", ");
		sb.append("ordinalityCodeName: " + this.getOrdinalityCodeName() + ", ");
		sb.append("ordinalityCodeSystem: " + this.getOrdinalityCodeSystem() + ", ");
		sb.append("reasonCodeDescription: " + this.getReasonCodeDescription() + ", ");
		sb.append("reasonCodeName: " + this.getReasonCodeName() + ", ");
		sb.append("reasonCodeSystem: " + this.getReasonCodeSystem() + ", ");
		sb.append("reasonEffectiveTime: " + this.getReasonEffectiveTime() + ", ");
		sb.append("resultValueCodeDescription: " + this.getResultValueCodeDescription() + ", ");
		sb.append("resultValueCodeName: " + this.getResultValueCodeName() + ", ");
		sb.append("resultValueCodeSystem: " + this.getResultValueCodeSystem() + ", ");
		sb.append("statusCodeName: " + this.getStatusCodeName() + ", ");
		sb.append("userCreated: " + this.getUserCreated() + ", ");
		sb.append("userUpdated: " + this.getUserUpdated() + ", ");
		sb.append("valueCodeDescription: " + this.getValueCodeDescription() + ", ");
		sb.append("valueString: " + this.getValueString() + ", ");
		sb.append("valueUnit: " + this.getValueUnit());
		return sb.toString();		
	}


	/** Equals implementation. 
	 * @param aThat Object to compare with
	 * @return true/false
	 */
	@Override
	public boolean equals(final Object aThat) {
		Object proxyThat = aThat;
		
		if ( this == aThat ) {
			 return true;
		}

		
		if (aThat instanceof HibernateProxy) {
 			// narrow down the proxy to the class we are dealing with.
 			try {
				proxyThat = ((HibernateProxy) aThat).getHibernateLazyInitializer().getImplementation(); 
			} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		   	}
		}
		if (aThat == null)  {
			 return false;
		}
		
		final PatientProcedure that; 
		try {
			that = (PatientProcedure) proxyThat;
			if ( !(that.getClassType().equals(this.getClassType()))){
				return false;
			}
		} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		} catch (ClassCastException e) {
				return false;
		}
		
		
		boolean result = true;
		result = result && (((this.getId() == null) && ( that.getId() == null)) || (this.getId() != null  && this.getId().equals(that.getId())));
		result = result && (((getCode() == null) && (that.getCode() == null)) || (getCode() != null && getCode().getId().equals(that.getCode().getId())));	
		result = result && (((getCodeDescription() == null) && (that.getCodeDescription() == null)) || (getCodeDescription() != null && getCodeDescription().equals(that.getCodeDescription())));
		result = result && (((getCodeMapping() == null) && (that.getCodeMapping() == null)) || (getCodeMapping() != null && getCodeMapping().getId().equals(that.getCodeMapping().getId())));	
		result = result && (((getConnectedRecord() == null) && (that.getConnectedRecord() == null)) || (getConnectedRecord() != null && getConnectedRecord().getId().equals(that.getConnectedRecord().getId())));	
		result = result && (((getDateCreated() == null) && (that.getDateCreated() == null)) || (getDateCreated() != null && getDateCreated().equals(that.getDateCreated())));
		result = result && (((getDateDisabled() == null) && (that.getDateDisabled() == null)) || (getDateDisabled() != null && getDateDisabled().equals(that.getDateDisabled())));
		result = result && (((getDateUpdated() == null) && (that.getDateUpdated() == null)) || (getDateUpdated() != null && getDateUpdated().equals(that.getDateUpdated())));
		result = result && (((getEffectiveTimeEnd() == null) && (that.getEffectiveTimeEnd() == null)) || (getEffectiveTimeEnd() != null && getEffectiveTimeEnd().equals(that.getEffectiveTimeEnd())));
		result = result && (((getEffectiveTimeStart() == null) && (that.getEffectiveTimeStart() == null)) || (getEffectiveTimeStart() != null && getEffectiveTimeStart().equals(that.getEffectiveTimeStart())));
		result = result && (((getExternalId() == null) && (that.getExternalId() == null)) || (getExternalId() != null && getExternalId().equals(that.getExternalId())));
		result = result && (((getNegationDetail() == null) && (that.getNegationDetail() == null)) || (getNegationDetail() != null && getNegationDetail().getId().equals(that.getNegationDetail().getId())));	
		result = result && (((getOrdinalityCode() == null) && (that.getOrdinalityCode() == null)) || (getOrdinalityCode() != null && getOrdinalityCode().getId().equals(that.getOrdinalityCode().getId())));	
		result = result && (((getOrdinalityCodeDescription() == null) && (that.getOrdinalityCodeDescription() == null)) || (getOrdinalityCodeDescription() != null && getOrdinalityCodeDescription().equals(that.getOrdinalityCodeDescription())));
		result = result && (((getOrdinalityCodeName() == null) && (that.getOrdinalityCodeName() == null)) || (getOrdinalityCodeName() != null && getOrdinalityCodeName().equals(that.getOrdinalityCodeName())));
		result = result && (((getOrdinalityCodeSystem() == null) && (that.getOrdinalityCodeSystem() == null)) || (getOrdinalityCodeSystem() != null && getOrdinalityCodeSystem().equals(that.getOrdinalityCodeSystem())));
		result = result && (((getPatient() == null) && (that.getPatient() == null)) || (getPatient() != null && getPatient().getId().equals(that.getPatient().getId())));	
		result = result && (((getReasonCode() == null) && (that.getReasonCode() == null)) || (getReasonCode() != null && getReasonCode().getId().equals(that.getReasonCode().getId())));	
		result = result && (((getReasonCodeDescription() == null) && (that.getReasonCodeDescription() == null)) || (getReasonCodeDescription() != null && getReasonCodeDescription().equals(that.getReasonCodeDescription())));
		result = result && (((getReasonCodeName() == null) && (that.getReasonCodeName() == null)) || (getReasonCodeName() != null && getReasonCodeName().equals(that.getReasonCodeName())));
		result = result && (((getReasonCodeSystem() == null) && (that.getReasonCodeSystem() == null)) || (getReasonCodeSystem() != null && getReasonCodeSystem().equals(that.getReasonCodeSystem())));
		result = result && (((getReasonEffectiveTime() == null) && (that.getReasonEffectiveTime() == null)) || (getReasonEffectiveTime() != null && getReasonEffectiveTime().equals(that.getReasonEffectiveTime())));
		result = result && (((getResultValueCode() == null) && (that.getResultValueCode() == null)) || (getResultValueCode() != null && getResultValueCode().getId().equals(that.getResultValueCode().getId())));	
		result = result && (((getResultValueCodeDescription() == null) && (that.getResultValueCodeDescription() == null)) || (getResultValueCodeDescription() != null && getResultValueCodeDescription().equals(that.getResultValueCodeDescription())));
		result = result && (((getResultValueCodeName() == null) && (that.getResultValueCodeName() == null)) || (getResultValueCodeName() != null && getResultValueCodeName().equals(that.getResultValueCodeName())));
		result = result && (((getResultValueCodeSystem() == null) && (that.getResultValueCodeSystem() == null)) || (getResultValueCodeSystem() != null && getResultValueCodeSystem().equals(that.getResultValueCodeSystem())));
		result = result && (((getStatusCode() == null) && (that.getStatusCode() == null)) || (getStatusCode() != null && getStatusCode().getId().equals(that.getStatusCode().getId())));	
		result = result && (((getStatusCodeName() == null) && (that.getStatusCodeName() == null)) || (getStatusCodeName() != null && getStatusCodeName().equals(that.getStatusCodeName())));
		result = result && (((getTemplate() == null) && (that.getTemplate() == null)) || (getTemplate() != null && getTemplate().getId().equals(that.getTemplate().getId())));	
		result = result && (((getUserCreated() == null) && (that.getUserCreated() == null)) || (getUserCreated() != null && getUserCreated().equals(that.getUserCreated())));
		result = result && (((getUserUpdated() == null) && (that.getUserUpdated() == null)) || (getUserUpdated() != null && getUserUpdated().equals(that.getUserUpdated())));
		result = result && (((getValueCode() == null) && (that.getValueCode() == null)) || (getValueCode() != null && getValueCode().getId().equals(that.getValueCode().getId())));	
		result = result && (((getValueCodeDescription() == null) && (that.getValueCodeDescription() == null)) || (getValueCodeDescription() != null && getValueCodeDescription().equals(that.getValueCodeDescription())));
		result = result && (((getValueString() == null) && (that.getValueString() == null)) || (getValueString() != null && getValueString().equals(that.getValueString())));
		result = result && (((getValueUnit() == null) && (that.getValueUnit() == null)) || (getValueUnit() != null && getValueUnit().equals(that.getValueUnit())));
		return result;
	}
	
	/** Calculate the hashcode.
	 * @see java.lang.Object#hashCode()
	 * @return a calculated number
	 */
	@Override
	public int hashCode() {
		if ( this.hashCode == null ) {
			synchronized ( this ) {
				if ( this.hashCode == null ) {
					Long newHashCode = null;

					if ( getId() != null ) {
					newHashCode = SAVED_HASHES.get( getId() );
					}
					
					if ( newHashCode == null ) {
						if ( getId() != null && getId() != 0L) {
							newHashCode = getId();
						} else {
							newHashCode = (long) super.hashCode();

						}
					}
					
					this.hashCode = newHashCode;
				}
			}
		}
		return (int) (this.hashCode & 0xffffff);
	}
	

	
	@PreUpdate
	public void preUpdate() {
		this.dateUpdated = new Date();
	}
}
